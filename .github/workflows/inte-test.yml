# This is a basic workflow to help you get started with Actions

name: "Integration Test"

# Triggers the workflow on push or pull request events
on: push

env:
  ## Sets environment variable
  ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
  BSCSCAN_API_KEY: ${{ secrets.BSCSCAN_API_KEY }}
  MAINNET_PRIVKEY: ${{ secrets.MAINNET_PRIVKEY }}
  TESTNET_PRIVKEY: ${{ secrets.TESTNET_PRIVKEY }}
  LOCAL_PRIVKEY: ${{ secrets.LOCAL_PRIVKEY }}
  INFURA_TESTNET_KEY: ${{ secrets.INFURA_TESTNET_KEY }}
  INFURA_MAINNET_KEY: ${{ secrets.INFURA_MAINNET_KEY }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "test"
  test:
    name: "Run Integration Test"
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./v1-contract

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up node
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Node module cache
        uses: actions/cache@v2
        id: cache
        with:
          path: "**/node_modules"
          key: npm-v2-${{ hashFiles('**/yarn.lock') }}
          restore-keys: npm-v2-
      - name: Install dependencies
        run: |
          if [ -e yarn.lock ]; then
          yarn install --frozen-lockfile
          elif [ -e package-lock.json ]; then
          npm ci
          else
          npm i
          fi
        if: steps.cache.outputs.cache-hit != 'true'
      - name: Hardhat artifact cache
        uses: actions/cache@v2
        id: hardhat-cache
        with:
          path: "artifacts"
          key: artifacts-${{ hashFiles('contracts/**/*.sol') }}
          restore-keys: |
            artifacts-
      - name: Hardhat compile
        run: npx hardhat compile
        if: steps.hardhat-cache.outputs.cache-hit != 'true'
      - name: Run Test
        run: yarn test:polygon
        timeout-minutes: 30
        env:
          # pass GitHub token to allow accurately detecting a build vs a re-run build
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
