# deploy-production.yaml

# Workflow to build and deploy site to Vercel using Hugo
# Name of Workflow
name: deploy-production

# Controls when the action will run. Triggers the workflow on push
# events but only for the main/master branch
on:
  push:
    branches: [master]
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron: "30 4 * * *"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "deploy-production"
  deploy-production:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Step 1 - Checks-out your repository under d$GITHUB_WORKSPACE
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          # ssh-key: ${{ secrets.SUBMODULE_CONTENT_DEPLOY_KEY }}
          submodules: recursive # Fetch private content

      - name: Node
        uses: actions/setup-node@v2
        with:
          node-version: "16"
      - run: npm install

      # Initiate deployment status
      - name: Start Deployment
        uses: bobheadxi/deployments@v0.4.3
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: Production

      # Step 2 - Install Hugo (specific version)
      - name: Install Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: "0.85.0"

      # Step 2.5 - Builds the site using Hugo
      - name: Get Content
        env:
          AT_KEY: ${{ secrets.AT_KEY }}
        run: npm run build

      # # Step 3 - Builds the site using Hugo
      # - name: Build
      #   run: hugo -v --minify
      # push to render
      # - name: Wait for Render Deployment
      #   uses: bounceapp/render-action@0.2.0
      #   with:
      #     email: ${{ secrets.RENDER_EMAIL }}
      #     password: ${{ secrets.RENDER_PASSWORD }}
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     service-id: srv-c71jckgnlki8eq3vlfr0
      - name: CompressFiles
        uses: ThiagoJaweb/ghaction-CompressFiles@v1.0.3
        with:
          path: "public"
          extensions: ".js,.css,.html"
          tools: "brotli,gzip"

      # Step 4 - Push our generated Hugo site to Vercel
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        id: vercel-action
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }} # Required
          #github-token: ${{ secrets.GITHUB_TOKEN }} #Optional
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }} #Required
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }} #Required
          github-comment: false
          vercel-args: "--prod --force"
          working-directory: public

      # - name: Deploy to Firebase
      #   uses: w9jds/firebase-action@master
      #   with:
      #     args: deploy --only hosting
      #   env:
      #     FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      #     PROJECT_ID: ${{ secrets.PROJECT_ID }}

      # - name: Deploy to Netlify
      #   uses: nwtgck/actions-netlify@v1.2
      #   with:
      #     publish-dir: "./public"
      #     production-branch: master
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     deploy-message: "Deploy from GitHub Actions"
      #     enable-pull-request-comment: false
      #     enable-commit-comment: true
      #     overwrites-pull-request-comment: true
      #   env:
      #     NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      #     NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      #   timeout-minutes: 1

      # Update deployment status
      - name: Update Deployment Status
        uses: bobheadxi/deployments@v0.4.3
        if: always()
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          env_url: ${{ steps.vercel-action.outputs.preview-url }}
